diff -urN linux-4.4.142.orig/arch/um/kernel/um_arch.c linux-4.4.142/arch/um/kernel/um_arch.c
--- linux-4.4.142.orig/arch/um/kernel/um_arch.c	2018-07-21 11:45:38.243601252 +0200
+++ linux-4.4.142/arch/um/kernel/um_arch.c	2018-07-21 11:50:10.783601252 +0200
@@ -287,8 +287,6 @@

 	diff = UML_ROUND_UP(brk_start) - UML_ROUND_UP(&_end);
 	if (diff > 1024 * 1024) {
-		printf("Adding %ld bytes to physical memory to account for "
-		       "exec-shield gap\n", diff);
 		physmem_size += UML_ROUND_UP(brk_start) - UML_ROUND_UP(&_end);
 	}

diff -urN linux-4.4.142.orig/arch/um/os-Linux/main.c linux-4.4.142/arch/um/os-Linux/main.c
--- linux-4.4.142.orig/arch/um/os-Linux/main.c	2018-07-21 11:45:38.271601252 +0200
+++ linux-4.4.142/arch/um/os-Linux/main.c	2018-07-21 11:51:41.231601252 +0200
@@ -186,12 +186,10 @@

 	/* Reboot */
 	if (ret) {
-		printf("\n");
 		execvp(new_argv[0], new_argv);
 		perror("Failed to exec kernel");
 		ret = 1;
 	}
-	printf("\n");
 	return uml_exitcode;
 }

diff -urN linux-4.4.142.orig/arch/um/os-Linux/mem.c linux-4.4.142/arch/um/os-Linux/mem.c
--- linux-4.4.142.orig/arch/um/os-Linux/mem.c	2018-07-21 11:45:38.271601252 +0200
+++ linux-4.4.142/arch/um/os-Linux/mem.c	2018-07-21 11:53:42.119601252 +0200
@@ -25,13 +25,11 @@
 {
 	struct statfs st;

-	printf("Checking if %s is on tmpfs...", dir);
 	if (statfs(dir, &st) < 0) {
 		printf("%s\n", strerror(errno));
 	} else if (st.f_type != TMPFS_MAGIC) {
 		printf("no\n");
 	} else {
-		printf("OK\n");
 		return 0;
 	}
 	return -1;
@@ -61,7 +59,6 @@
 	int i;
 	const char *dir;

-	printf("Checking environment variables for a tempdir...");
 	for (i = 0; vars[i]; i++) {
 		dir = getenv(vars[i]);
 		if ((dir != NULL) && (*dir != '\0')) {
@@ -72,7 +69,6 @@
 				goto warn;
 		}
 	}
-	printf("none found\n");

 	for (i = 0; tmpfs_dirs[i]; i++) {
 		dir = tmpfs_dirs[i];
@@ -189,7 +185,6 @@

 	addr = mmap(NULL, UM_KERN_PAGE_SIZE,
 		    PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE, fd, 0);
-	printf("Checking PROT_EXEC mmap in %s...", tempdir);
 	if (addr == MAP_FAILED) {
 		err = errno;
 		printf("%s\n", strerror(err));
@@ -198,7 +193,6 @@
 			printf("%s must be not mounted noexec\n", tempdir);
 		exit(1);
 	}
-	printf("OK\n");
 	munmap(addr, UM_KERN_PAGE_SIZE);

 	close(fd);

diff -urN linux-4.4.142.orig/arch/um/os-Linux/start_up.c linux-4.4.142/arch/um/os-Linux/start_up.c
--- linux-4.4.142.orig/arch/um/os-Linux/start_up.c	2018-07-21 11:45:38.271601252 +0200
+++ linux-4.4.142/arch/um/os-Linux/start_up.c	2018-07-21 11:56:13.947601252 +0200
@@ -166,7 +166,6 @@
 	unsigned long regs[MAX_REG_NR];
 	int pid, n, status, count=0;

-	non_fatal("Checking syscall emulation patch for ptrace...");
 	sysemu_supported = 0;
 	pid = start_ptraced_child();

@@ -199,10 +198,8 @@
 		goto fail_stopped;

 	sysemu_supported = 1;
-	non_fatal("OK\n");
 	set_using_sysemu(!force_sysemu_disabled);

-	non_fatal("Checking advanced syscall emulation patch for ptrace...");
 	pid = start_ptraced_child();

 	if ((ptrace(PTRACE_OLDSETOPTIONS, pid, 0,
@@ -244,7 +241,6 @@
 		goto fail_stopped;

 	sysemu_supported = 2;
-	non_fatal("OK\n");

 	if (!force_sysemu_disabled)
 		set_using_sysemu(sysemu_supported);
@@ -260,7 +256,6 @@
 {
 	int pid, syscall, n, status;

-	non_fatal("Checking that ptrace can change system call numbers...");
 	pid = start_ptraced_child();

 	if ((ptrace(PTRACE_OLDSETOPTIONS, pid, 0,
@@ -292,7 +287,6 @@
 		}
 	}
 	stop_ptraced_child(pid, 0, 1);
-	non_fatal("OK\n");
 	check_sysemu();
 }

@@ -307,16 +301,6 @@
 		perror("Getting core dump limit");
 		return;
 	}
-
-	printf("Core dump limits :\n\tsoft - ");
-	if (lim.rlim_cur == RLIM_INFINITY)
-		printf("NONE\n");
-	else printf("%lu\n", lim.rlim_cur);
-
-	printf("\thard - ");
-	if (lim.rlim_max == RLIM_INFINITY)
-		printf("NONE\n");
-	else printf("%lu\n", lim.rlim_max);
 }

 void __init os_early_checks(void)

diff -urN linux-4.4.142.orig/arch/x86/um/os-Linux/task_size.c linux-4.4.142/arch/x86/um/os-Linux/task_size.c
--- linux-4.4.142.orig/arch/x86/um/os-Linux/task_size.c	2018-07-21 11:45:38.447601252 +0200
+++ linux-4.4.142/arch/x86/um/os-Linux/task_size.c	2018-07-21 11:58:37.519601252 +0200
@@ -79,9 +79,6 @@
 	unsigned long top = 0xffffd000 >> UM_KERN_PAGE_SHIFT;
 	unsigned long test, original;

-	printf("Locating the bottom of the address space ... ");
-	fflush(stdout);
-
 	/*
 	 * We're going to be longjmping out of the signal handler, so
 	 * SA_DEFER needs to be set.
@@ -109,10 +106,6 @@
 		exit(1);
 	}

-	printf("0x%x\n", bottom << UM_KERN_PAGE_SHIFT);
-	printf("Locating the top of the address space ... ");
-	fflush(stdout);
-
 	original = bottom;

 	/* This could happen with a 4G/4G split */
@@ -134,7 +127,6 @@
 		exit(1);
 	}
 	top <<= UM_KERN_PAGE_SHIFT;
-	printf("0x%x\n", top);

 	return top;
 }
